// <auto-generated />
using System;
using AppCondominio;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AppCondominio.Migrations
{
    [DbContext(typeof(CondominioContext))]
    partial class CondominioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AppCondominio.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContatoId");

                    b.Property<string>("Cpf")
                        .IsRequired();

                    b.Property<int>("EnderecoId");

                    b.Property<int>("LocadorID");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("LocadorID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AppCondominio.Models.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Tel1")
                        .IsRequired();

                    b.Property<string>("Tel2");

                    b.HasKey("Id");

                    b.ToTable("Contatos");
                });

            modelBuilder.Entity("AppCondominio.Models.Contrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataFim");

                    b.Property<DateTime>("DataInicio");

                    b.Property<int>("LocadorID");

                    b.Property<int>("LocatarioID");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("LocadorID");

                    b.HasIndex("LocatarioID");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("AppCondominio.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired();

                    b.Property<string>("Cep")
                        .IsRequired();

                    b.Property<string>("Cidade")
                        .IsRequired();

                    b.Property<string>("Complemento");

                    b.Property<string>("Estado")
                        .IsRequired();

                    b.Property<string>("Logradouro")
                        .IsRequired();

                    b.Property<string>("Nr")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("AppCondominio.Models.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContratoID");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ContratoID");

                    b.ToTable("FormasPagamento");
                });

            modelBuilder.Entity("AppCondominio.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .IsRequired();

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("AppCondominio.Models.Gastos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<double>("Limite");

                    b.Property<int>("LocadorID");

                    b.Property<string>("Tipo")
                        .IsRequired();

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("LocadorID");

                    b.ToTable("Gastos");
                });

            modelBuilder.Entity("AppCondominio.Models.Locador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContatoId");

                    b.Property<string>("Documento")
                        .IsRequired();

                    b.Property<int?>("EnderecoId");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Locadores");
                });

            modelBuilder.Entity("AppCondominio.Models.Locatario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContatoId");

                    b.Property<string>("Documento")
                        .IsRequired();

                    b.Property<int>("EnderecoId");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Locatarios");
                });

            modelBuilder.Entity("AppCondominio.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int>("FornecedorID");

                    b.Property<int>("LocadorID");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<double>("QuantidadeAtual");

                    b.Property<double>("QuantidadeTotal");

                    b.Property<double>("ValorUnitario");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorID");

                    b.HasIndex("LocadorID");

                    b.ToTable("Materiais");
                });

            modelBuilder.Entity("AppCondominio.Models.Cliente", b =>
                {
                    b.HasOne("AppCondominio.Models.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppCondominio.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppCondominio.Models.Locador", "Locador")
                        .WithMany("Clientes")
                        .HasForeignKey("LocadorID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AppCondominio.Models.Contrato", b =>
                {
                    b.HasOne("AppCondominio.Models.Locador", "Locador")
                        .WithMany("Contratos")
                        .HasForeignKey("LocadorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AppCondominio.Models.Locatario", "Locatario")
                        .WithMany("Contratos")
                        .HasForeignKey("LocatarioID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AppCondominio.Models.FormaPagamento", b =>
                {
                    b.HasOne("AppCondominio.Models.Contrato", "Contrato")
                        .WithMany("FormasPagamento")
                        .HasForeignKey("ContratoID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AppCondominio.Models.Gastos", b =>
                {
                    b.HasOne("AppCondominio.Models.Locador", "Locador")
                        .WithMany("Gastos")
                        .HasForeignKey("LocadorID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("AppCondominio.Models.Locador", b =>
                {
                    b.HasOne("AppCondominio.Models.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId");

                    b.HasOne("AppCondominio.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("AppCondominio.Models.Locatario", b =>
                {
                    b.HasOne("AppCondominio.Models.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AppCondominio.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AppCondominio.Models.Material", b =>
                {
                    b.HasOne("AppCondominio.Models.Fornecedor", "Fornecedor")
                        .WithMany("Materiais")
                        .HasForeignKey("FornecedorID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AppCondominio.Models.Locador", "Locador")
                        .WithMany("Materiais")
                        .HasForeignKey("LocadorID")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
